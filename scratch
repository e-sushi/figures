MathObject 
addition,add,+ is Function {
    // the tree form of this Operator, specified with TML (s-expressions)
    form: (+ a b);

    // a list of manipulations applicable with this operator at the root
    manipulations: [
        /* commutativity */ (+ a b) = (+ b a);
        /*  associativiy */ (+ (+ a b) c) = (+ a (+ b c));
    ]

    visual: {
        // when a string is given as the base glyph of a visual, the glyph used will be loaded from the selected math font.
        text: "$1+$2";
        instructions: [
            lhs is $1;
            rhs is $2;
            plus is glyph "+";
            align lhs origin_y to plus center_y;
            align lhs right to plus left;
            align rhs origin_y to plus center_y;
            align rhs left to plus right;
        ]
    }
}

MathObject 
exponential,exp,^ is Function {
    form: (exp x);

    visual: {
        text: "$1^$2";
        render:{
            instructions: {
                base: $1;
                exponent: $2;
                scale exponent.y 0.9;
                align exponent.anchor.bottom_left to base.anchor.top_right;
            }
        }
    }
}

MathObject
sine,sin is Function {
    form: (sin x);
    
    visual: {
        text: "sin($1)";
        instructions:[
            base: glyph "sin";
            lparen: glyph "(";
            rparen: glyph ")";
            operand: $1;
            align base.center to lparen.center;
            scale lparen.y relative to operand.y;
            scale rparen.y relative to operand.y;
            position lparen.anchor.top_right at operand.anchor.top_left;
        ]
    }
}